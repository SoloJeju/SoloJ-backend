spring:
  config:
    import: "optional:env[.properties]"
  server:
    port: 8080
  datasource:
    url: jdbc:mysql://${DEFAULT_URL}:3306/${DEFAULT_SCHEMA}?serverTimezone=Asia/Seoul
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 10000   # 10초
      validation-timeout: 3000
      maximum-pool-size: 10
  main:
    lazy-initialization: true
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        physical_naming_strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit_naming_strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    show_sql: false
  jackson:
    time-zone: Asia/Seoul
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-authentication-method: client_secret_post
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${DOMAIN_URL}/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            scope: profile_nickname
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SOLOJ_EMAIL}
    password: ${APP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
    default-encoding: UTF-8
  tourapi:
    key: ${SERVICE_KEY}
    app-name: 혼자옵서예
    images:
      page-size: 20   # TourAPI 호출당 numOfRows (1~30 권장)
      max-page: 200   # 안전장치 (무한 page 탐색 방지)
  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      repositories:
        enabled: false
  flyway:
    enabled: false
#    baseline-on-migrate: true
#    baseline-version: 0
#    locations: classpath:db/migration
#    validate-on-migrate: true
#    clean-disabled: true
#    out-of-order: true
  autoconfigure:
    exclude:
      - org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB

jwt:
  secret: ${JWT_SECRET:myVeryLongSecretKeyForJWTTokenSigningThatIsAtLeast512BitsLongForHS512Algorithm1234567890}
  access-token-expiration: 900 # 15분 (초 단위)
  refresh-token-expiration: 604800 # 7일 (초 단위)

openai:
  model: gpt-4
  secret-key: ${AI_SECRET_KEY}


discord:
  webhooks:
    error: ${DISCORD_WEBHOOK_ERROR:}
    lifecycle: ${DISCORD_WEBHOOK_LIFECYCLE:}

google:
  application:
    credentials: "google-credential.json"


cloud:
  aws:
    credentials:
      access-key: ${IAM_ACCESS_KEY}
      secret-key: ${IAM_SECRET_KEY}
    region:
      static: ap-northeast-2
    s3:
      bucket: ${BUCKET_NAME}


fcm:
  enabled: ${FCM_ENABLED:true}
  key:
    path: ${FCM_KEY_PATH:firebase/soloj-firbase-key.json}


management:
  metrics:
    enable:
      jvm: true
      system: false   # 시스템 메트릭 꺼짐
      mongo: false    # 몽고 안 씀
      process: false



server:
  tomcat:
    max-http-form-post-size: -1  # 폼 POST 제한 해제(또는 충분히 크게)
    max-swallow-size: -1         # 업로드 중단 시 버퍼 제한 해제